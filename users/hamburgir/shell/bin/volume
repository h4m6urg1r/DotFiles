#!/usr/bin/env bash

action=""
device=""
percentage="1"
muted=""

# Function to display usage information
function show_usage() {
	echo "Usage: $0 <options>"
	echo "OPTIONS:"
	echo "  -l                 Lower volume"
	echo "  -r                 Raise volume"
	echo "  -t                 Toggle mute"
	echo "  -m                 Mute"
	echo "  -u                 Unmute"
	echo "  -s                 Select source"
	echo "  -p <percentage>    Set percentage"
	echo "  -e                 Output eww state"
	exit 1
}

function ewwUpdate() {
	if [[ "$device" == "source" ]]; then
		eww update micInfo="{\"mute\":${muted}, \"volume\":${volume}}"
	else
		eww update volInfo="{\"mute\":${muted}, \"volume\":${volume}}"
	fi
}

# function fileUpdate() {
# 	if [[ "$device" == "source" ]]; then
# 		eww update micInfo="{\"mute\":${muted}, \"volume\":${volume}"}
# 	else
# 		eww update volInfo="{\"mute\":${muted}, \"volume\":${volume}"}
# 	fi
# }

function raise() {
	pamixer "${device:+--default-source}" --increase "$percentage"
	volume=$(pamixer ${device:+--default-source} --get-volume)
	ewwUpdate
	echo "Raising $device volume by $percentage"
}

function lower() {
	pamixer "${device:+--default-source}" --decrease "$percentage"
	volume=$(pamixer ${device:+--default-source} --get-volume)
	ewwUpdate
	echo "Lowering $device volume by $percentage"
}

function toggleMute() {
	pamixer "${device:+--default-source}" --toggle-mute
	muted=$(pamixer ${device:+--default-source} --get-mute)
	ewwUpdate
	echo "$([[ "$muted" == "true" ]] && echo "M" || echo "Unm")uting $device"
}

function mute() {
	muted="true"
	pamixer "${device:+--default-source}" --mute
	ewwUpdate
	echo "$([[ "$muted" == "true" ]] && echo "M" || echo "Unm")uting $device"
}

function unmute() {
	muted="false"
	pamixer "${device:+--default-source}" --unmute
	ewwUpdate
	echo "$([[ "$muted" == "true" ]] && echo "M" || echo "Unm")uting $device"
}

# Parse command-line arguments
while getopts ":setmulrp:" opt; do
	case $opt in
		l)
			[[ "$action" != "mute" ]] && action="lower"
			;;
		r)
			[[ "$action" != "mute" ]] && action="raise"
			;;
		t)
			action="toggleMute"
			;;
		m)
			action="mute"
			;;
		u)
			action="unmute"
			;;
		s)
			device="source"
			;;
		p)
			percentage="${OPTARG}"
			;;
		e)
			volume=$(pamixer ${device:+--default-source} --get-volume)
			muted=$(pamixer ${device:+--default-source} --get-mute)
			echo "{\"mute\":${muted}, \"volume\":${volume}}"
			exit 0
			;;
		\?)
			echo "Invalid option: -$OPTARG"
			show_usage
			;;
		:)
			echo "Option -$OPTARG requires an argument."
			show_usage
			;;
	esac
done

# If no arguments are provided, display usage information
if [ $OPTIND -eq 1 ]; then
	show_usage
fi

# echo "$action"

if [[ "$action" == "toggleMute" ]]; then
	toggleMute
	# echo "toggleMute"
elif [[ "$action" == "lower" ]]; then
	lower
	# echo "lower"
elif [[ "$action" == "raise" ]]; then
	raise
	# echo "raise"
elif [[ "$action" == "mute" ]]; then
	mute
	# echo "mute"
elif [[ "$action" == "unmute" ]]; then
	unmute
	# echo "unmute"
fi
